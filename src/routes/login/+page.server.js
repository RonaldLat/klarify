import { auth } from '$lib/server/auth';
import { fail, redirect } from '@sveltejs/kit';

export const actions = {
	/**
	 * Action for email and password login.
	 * On success, returns a success flag for client-side handling.
	 */
	emailPasswordLogin: async ({ request }) => {
		const formData = await request.formData();

		const email = formData.get('email')?.toString();
		const password = formData.get('password')?.toString();

		if (!email || !password) {
			return fail(400, {
				error: 'Please enter your email and password.',
				email
			});
		}

		try {
			// Call Better-Auth's signInEmail function
			const response = await auth.api.signInEmail({
				body: {
					email,
					password
				}
			});

			if (response.error) {
				return fail(400, {
					error: response.error.message || 'Invalid email or password.',
					email
				});
			}

			// Success: Return a success status for the client to handle invalidation and redirect.
			return { success: true };
		} catch (error) {
			console.error('Login error:', error);
			return fail(500, {
				error: 'An unexpected error occurred during login.'
			});
		}
	},

	/**
	 * Action for initiating Google OAuth login.
	 * Returns a redirect response generated by Better-Auth.
	 */
	// googleSignIn: async ({ request }) => {
	// 	try {
	// 		const response = await auth.api.signInSocial({
	// 			body: { provider: 'google' }
	// 		});
	// 		return response;
	// 	} catch (error) {
	// 		console.error('Google sign-in initiation error:', error);
	// 		// Throw a server-side redirect to an error page if the initiation failed.
	// 		throw redirect(303, '/login?error=GoogleAuthFailed');
	// 	}
	// }
};
